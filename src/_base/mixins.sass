// triangle (ширина, высота, фон, направление стрелки)
=arr($width, $height, $bg, $direction)
	width: 0px
	height: 0px
	border-style: solid
	@if $direction == t
		border-width: 0 $width / 2 + px $height + px $width / 2 + px
		border-color: transparent transparent $bg transparent
	@if $direction == r
		border-width: $height / 2 + px 0 $height / 2 + px $width + px
		border-color: transparent transparent transparent $bg
	@if $direction == b
		border-width: $height + px $width / 2 + px 0 $width / 2 + px
		border-color: $bg transparent transparent transparent
	@if $direction == l
		border-width: $height / 2 + px $width + px $height / 2 + px 0
		border-color: transparent $bg transparent transparent
	@if $direction == tl
		border-width: $height + px $width + px 0 0
		border-color: $bg transparent transparent transparent
	@if $direction == tr
		border-width: 0 $width + px $height + px 0
		border-color: transparent $bg transparent transparent
	@if $direction == br
		border-width: 0 0 $height + px $width + px
		border-color: transparent transparent $bg transparent
	@if $direction == bl
		border-width: $height + px 0 0 $width + px
		border-color: transparent transparent transparent $bg

// Подключени шрифтов (Название шрифта, название файла)
=font($alias, $name)
	@font-face
		font-family: $alias
		src: url("../fonts/" + $name + ".eot")
		src: url("../fonts/" + $name + ".eot?#iefix") format("embedded-opentype"), url("../fonts/" + $name + ".woff2") format('woff2'), url("../fonts/" + $name + ".woff?ver1.0") format("woff"), url("../fonts/" + $name + ".ttf") format("truetype"), url("../fonts/" + $name + ".svg#" + $name + "") format("svg")
		@content



// Указываем цвет placeholder (цвет)
=placeholder-color($color)
	&:-moz-placeholder,
	&::-moz-placeholder
		color: $color
		opacity: 1
	&::-webkit-input-placeholder
		color: $color

// Указываем стили для placeholder
=placeholder
	&:-ms-input-placeholder
		@content
	&:-moz-placeholder
		@content
	&::-moz-placeholder
		@content
	&::-webkit-input-placeholder
		@content
	&::placeholder
		@content


// media

$units: 1px !default;

@mixin screen($res-min, $res-max)

    @media screen and ( min-width: if(unitless($res-min), $res-min*$units, $res-min) ) and ( max-width: if(unitless($res-max), $res-max*$units, $res-max) )
  
        @content;
  


@mixin max-screen($res)

    @media screen and ( max-width: if(unitless($res), $res*$units, $res) )
  
        @content;
  


@mixin min-screen($res)

    @media screen and ( min-width: if(unitless($res), $res*$units, $res) )
  
        @content;
  


